<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jaxws="http://cxf.apache.org/jaxws"  
	xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://cxf.apache.org/jaxws 
	http://cxf.apache.org/schemas/jaxws.xsd
	http://cxf.apache.org/core 
	http://cxf.apache.org/schemas/core.xsd"
	default-lazy-init="true" default-init-method="init"
	default-destroy-method="destroy">
	
	<!-- Spring扫描的路径，exclude-filter用来排除 -->
	<context:component-scan base-package="com.esen.spring" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 读取property或conf配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:**/spring/config/jdbc.conf"/>
	</bean>
	
	<!-- 根据配置文件加载数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
		<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}" /> -->
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- <aop:config>
	    <aop:pointcut id="bussinessService" expression="execution(* com.esen.casemgr..*Service.*(..))" />
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService"/>
	 </aop:config>
	 <tx:advice id="txAdvice" transaction-manager="txManager">
	    <tx:attributes>
	      <tx:method name="get*" read-only="true" rollback-for="Throwable"/>
	      <tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable"/>
	      <tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable"/>
	      <tx:method name="delete*" propagation="REQUIRED" rollback-for="Throwable"/>
	      <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>
	    </tx:attributes	>
     </tx:advice> -->
	<!--
		这里是配置一个Webservice实例的对象,CXF 实现一个webservice服务器很简单.
		1.定义一个接口,并且在对象上标记成@WebServcie,这个就是对外提供的webservice接口
		2.编写这个接口的实现类
		3.在appliectionContext_Xxx.xml里面注册实现类,如下:
				 id:javabean的id
		implementor:实现类路径
			address:访问接口
		<jaxws:endpoint id="hello" implementor="com.esen.weblib.ws.impl.HelloWorldImpl" 
			address="/hello">  
		</jaxws:endpoint> 
		 -->
   
	<!--<jaxws:endpoint address="/completeRectificationService" implementor="com.esen.dataquality.data.rectification.service.impl.CompleteRectificationServiceImpl" >
</jaxws:endpoint>-->

	<!-- 引入其他产品的XML文件，文件通配符为 applicationContext-*.xml -->
	<import resource="/WEB-INF/spring/applicationContext_*.xml" />
</beans>